{"version":3,"sources":["compnenet/card/card.jsx","compnenet/card-list/card-list.jsx","compnenet/searchbox/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","data","name","id","email","className","src","alt","CardList","monsterList","searchField","filter","monster","toLowerCase","includes","map","SearchBox","searchMonster","type","placeholder","onChange","App","state","fetch","then","response","json","user","setState","console","log","this","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAkBeA,G,kBAfF,SAACC,GAAW,IAAD,EACGA,EAAMC,KAAvBC,EADc,EACdA,KAAKC,EADS,EACTA,GAAGC,EADM,EACNA,MAEd,OACI,sBAAKC,UAAU,iBAAf,UACA,qBACAC,IAAG,+BAA0BH,EAA1B,0BACHI,IAAI,YAEJ,6BAAKL,IACL,4BAAIE,SCKGI,EAbE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAIjC,OAHGD,EAAcA,EAAYE,QAAO,SAACC,GAAD,OAChCA,EAAQV,KAAKW,cAAcC,SAASJ,EAAYG,kBAGlD,qBAAKR,UAAU,YAAf,SACGI,EAAYM,KAAI,SAACd,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKE,UCHPa,G,MANG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAChB,OACQ,uBAAOZ,UAAU,YAAYa,KAAK,SAASC,YAAY,iBAAiBC,SAAUH,MC8B/EI,E,4MApBbC,MAAM,CACJV,QAAQ,GACRF,YAAY,I,kEATO,IAAD,OAClBa,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAG,EAAKC,SAAS,CAAEhB,QAAQe,S,+BAU7B,IAAD,OAGP,OAFAE,QAAQC,IAAIC,KAAKT,OAGf,sBAAKjB,UAAU,MAAf,UACA,gDACA,cAAC,EAAD,CAAWY,cAAe,SAAAe,GAAC,OAAE,EAAKJ,SAAS,CAAElB,YAAYsB,EAAEC,OAAOC,WAClE,cAAC,EAAD,CAAUzB,YAAasB,KAAKT,MAAMV,QAASF,YAAaqB,KAAKT,MAAMZ,qB,GAtBvDyB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79b02966.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.css\";\r\n\r\nconst Card = (props) => {\r\n   const {name,id,email} = props.data;\r\n\r\n    return ( \r\n        <div className=\"card-container\">\r\n        <img \r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n        alt=\"Monster\"\r\n        />\r\n        <h3>{name}</h3>\r\n        <p>{email}</p>\r\n        </div>\r\n        );\r\n}\r\n \r\nexport default Card;","import React from \"react\";\r\nimport \"./card-list.css\";\r\n\r\nimport Card from \"../card/card\";\r\n\r\nconst CardList = ({ monsterList, searchField }) =>{\r\n  (monsterList = monsterList.filter((monster) =>\r\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n  ));\r\nreturn (\r\n  <div className=\"card-list\">\r\n    {monsterList.map((data) => (\r\n      <Card key={data.id} data={data} />\r\n    ))}\r\n  </div>\r\n)\r\n    }\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport '../searchbox/search-box.css';\r\n\r\nconst SearchBox = ({searchMonster}) => {\r\n    return ( \r\n            <input className=\"searchBox\" type='search' placeholder=\"Search Monster\" onChange={searchMonster}></input>\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from \"./compnenet/card-list/card-list.jsx\";\nimport SearchBox from \"./compnenet/searchbox/search-box.jsx\";\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users/')\n    .then(response=>response.json())\n    .then(user=> this.setState({ monster:user  }))\n\n  }\n\n  state={\n    monster:[],\n    searchField:''\n  }\n\n\n  render() { \n    console.log(this.state);\n\n    return (  \n      <div className=\"App\">\n      <h1>Monster Search</h1>\n      <SearchBox searchMonster={e=>this.setState({ searchField:e.target.value  } ) } />\n      <CardList monsterList={this.state.monster} searchField={this.state.searchField}/>\n    </div>\n\n    );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}